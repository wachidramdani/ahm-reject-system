{"version":3,"sources":["app/master/PartNumber.js","app/commons/Table/Table2Edit.js"],"names":["PartNumber","_useState","useState","_useState2","_slicedToArray","panel","setPanel","_useState3","_useState4","partNumber","setPartNumber","_useState5","_useState6","mrp","setMrp","_useState7","_useState8","vendor","setVendor","_useState9","_useState10","valStatus","setValStatus","_useState11","_useState12","currentPage","setCurrentPage","_useState13","_useState14","sizePerPage","setSizePerPage","_useState15","dtPart","_useState16","datas","setDatas","columns","dataField","text","headerAlign","align","formatter","cell","row","rowIndex","rowNumber","React","createElement","headerStyle","colum","colIndex","width","editable","handleChange","e","name","handleChangeInput","target","value","className","Box","sx","Accordion","expanded","onChange","AccordionSummary","expandIcon","ExpandMore","color","aria-controls","id","backgroundColor","borderBottom","Typography","style","fontSize","fontWeight","AccordionDetails","type","Select","options","label","isClearable","marginTop","href","Button","variant","lineHeight","display","onClick","console","log","filter","el","part_number_desc","Table2Edit","caption","tableHead","handlePageChange","page","props","emptyDataMessage","onPageChange","paginationSize","pageStartIndex","alwaysShowAllBtns","hideSizePerPage","firstPageText","prePageText","nextPageText","lastPageText","showTotal","paginationTotalRenderer","from","to","size","position","padding","disablePageTitle","sizePerPageList","length","ToolkitProvider","keyField","data","search","BootstrapTable","Object","assign","baseProps","striped","hover","condensed","wrapperClasses","pagination","paginationFactory","noDataIndication"],"mappings":"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","file":"static/js/28.1c449895.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Select from 'react-select';\nimport Table2Edit from '../commons/Table/Table2Edit';\nimport { ExpandMore } from '@material-ui/icons';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Typography } from '@material-ui/core';\nimport dtPart from '../commons/jsonFile/partsNumber.json'\n\nfunction PartNumber() {\n    const [panel, setPanel] = useState(true)\n    const [partNumber, setPartNumber] = useState(\"\")\n    const [mrp, setMrp] = useState(\"\")\n    const [vendor, setVendor] = useState(null)\n    const [valStatus, setValStatus] = useState(null)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [sizePerPage, setSizePerPage] = useState(2)\n    const [datas, setDatas] = useState(dtPart)\n\n    const optVendor = [\n        { value: '1', label: 'Vendor A' },\n        { value: '2', label: 'Vendor B' }\n    ]\n\n    const optStatus = [\n        { value: '1', label: 'All' },\n        { value: '2', label: 'Active' },\n        { value: '3', label: 'Non-Active' }\n    ]\n\n    const columns = [\n        {\n            dataField: '#',\n            text: '#',\n            headerAlign: 'center',\n            align: 'center',\n            formatter: (cell, row, rowIndex) => {\n                let rowNumber = (currentPage - 1) * sizePerPage + (rowIndex + 1);\n                return <span>{rowNumber}</span>;\n            },\n            headerStyle: (colum, colIndex) => {\n                return { width: '40px' };\n            },\n        },\n        {\n            dataField: 'part_number',\n            text: 'Part Number',\n            headerAlign: 'center',\n            align: 'left',\n            editable: false,\n            headerStyle: (colum, colIndex) => {\n                return { width: '100px' };\n            }\n        },\n        {\n            dataField: 'part_number_desc',\n            text: 'Part Description',\n            headerAlign: 'center',\n            align: 'left',\n            editable: false,\n            headerStyle: (colum, colIndex) => {\n                return { width: '190px' };\n            },\n        },\n        {\n            dataField: 'mrp_controller',\n            text: 'MRP Controller',\n            headerAlign: 'center',\n            align: 'center',\n            editable: false,\n            headerStyle: (colum, colIndex) => {\n                return { width: '100px' };\n            }\n        },\n        {\n            dataField: 'vendor_desc',\n            text: 'Vendor',\n            headerAlign: 'center',\n            align: 'center',\n            editable: false,\n            headerStyle: (colum, colIndex) => {\n                return { width: '100px' };\n            }\n        },\n        {\n            dataField: 'status',\n            text: 'Status',\n            headerAlign: 'center',\n            align: 'center',\n            editable: false,\n            headerStyle: (colum, colIndex) => {\n                return { width: '80px' };\n            }\n        }\n    ]\n\n    const handleChange = (e, name) => {\n        if (e) {\n            if (name === 'pn') { setPartNumber(e) }\n            else if (name === 'status') { setValStatus(e) }\n            else if (name === 'vendor') { setVendor(e) }\n        }\n    }\n\n    const handleChangeInput = (e, name) => {\n        if (name === 'mrp') { setMrp(e.target.value) }\n        else if(name === 'partNumber') { setPartNumber(e.target.value)}\n    }\n\n    const handleSearch = () => {\n        console.log(partNumber, mrp, vendor, valStatus, 'SEARCH')\n        if(partNumber !== \"\") { setDatas(dtPart.filter((el) => el.part_number_desc === partNumber)) }\n    }\n\n    const handlePageChange = (page, sizePerPage) => {\n        setCurrentPage(page)\n        setSizePerPage(sizePerPage)\n    }\n\n    const handleReset = () => {\n        setPartNumber(\"\")\n        setMrp(\"\")\n        setVendor(null)\n        setValStatus(null)\n        setDatas(dtPart)\n    }\n\n    return (\n        <div>\n            <div className=\"container d-flex p-md-0\">\n                <div className=\"az-content-body pd-lg-l-40 d-flex flex-column\">\n                    <div className=\"az-content-breadcrumb\">\n                        <span>Master</span>\n                        <span>Part Number</span>\n                    </div>\n                    <h2 className=\"az-content-title\">Master Part Number</h2>\n\n                    <Box sx={{ width: '100%' }}>\n                        <Accordion expanded={panel} onChange={() => setPanel(!panel)} className='accordionRoot'>\n                            <AccordionSummary\n                                className='panelSummary'\n                                expandIcon={<ExpandMore sx={{ color: '#fff' }} />}\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                                sx={{ backgroundColor: '#fafafa', borderBottom: '1px solid #ececec' }}\n                            >\n                                <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>Filter</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <div className=\"row row-sm mg-b-4 w-100\">\n                                    <div className=\"col-lg-12\">\n                                        <div className=\"row mg-b-4\">\n                                            <div className=\"col-lg-5\">\n                                                <span className=\"font-weight-bold font-italic\">Part Number Desc</span>\n                                                <input type=\"text\" className=\"form-control\" name=\"partNumber\" value={partNumber} onChange={(e) => handleChangeInput(e, 'partNumber')} />\n                                            </div>\n\n                                            <div className=\"col-lg-5\">\n                                                <span className=\"font-weight-bold font-italic\">MRP Controller</span>\n                                                <input type=\"text\" className=\"form-control\" name=\"mrp\" value={mrp} onChange={(e) => handleChangeInput(e, 'mrp')} />\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row mg-b-4 mt-2\">\n                                            <div className=\"col-lg-5\">\n                                                <span className=\"font-weight-bold font-italic\">Status</span>\n                                                <Select name=\"status\" value={valStatus} options={optStatus} onChange={(e) => handleChange(e, 'status')} isClearable />\n                                            </div>\n\n                                            <div className=\"col-lg-5\">\n                                                <span className=\"font-weight-bold font-italic\">Vendor Desc</span>\n                                                <Select name=\"vendor\" value={vendor} options={optVendor} onChange={(e) => handleChange(e, 'vendor')} isClearable />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </AccordionDetails>\n                        </Accordion>\n                        <div className=\"az-dashboard-nav\" style={{ marginTop: 20 }}>\n                            <nav className=\"nav\">\n                                <a className=\"nav-link\" href=\"#/\">\n                                    <Button variant=\"success btn-block\" className=\"btn-info btn-brand btn-sm icon mg-r-2\" style={{ lineHeight: '28px', display: 'flex' }} onClick={handleSearch}><i className=\"typcn typcn-zoom-outline\" style={{ fontSize: '18px', lineHeight: '28px' }}></i> Search</Button>\n                                </a>\n                                <a className=\"nav-link\" href=\"#/\">\n                                    <Button variant=\"danger btn-block\" className=\"btn-danger btn-brand btn-sm icon mg-r-2\" style={{ lineHeight: '28px', display: 'flex' }} onClick={handleReset}><i className=\"typcn typcn-arrow-sync\" style={{ fontSize: '18px', lineHeight: '28px' }}></i> Reset</Button>\n                                </a>\n                                <a className=\"nav-link\" href=\"#/\"><i className=\"fas fa-ellipsis-h\"></i></a>\n                            </nav>\n                        </div>\n                        <div className=\"az-content-label mg-b-5\">\n                            <Table2Edit\n                                caption=''\n                                tableHead={columns}\n                                datas={datas}\n                                handlePageChange={handlePageChange}\n                            />\n                        </div>\n                    </Box>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PartNumber\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\n\nconst Table2Edit = (props) => {\n\n    // const MySearch = (props) => {\n    //   let input;\n    //   const handleClick = () => {\n    //     props.onSearch(input.value);\n    //   };\n    //   const handleClear = () => {\n    //     input.value='';\n    //     handleClick()\n    //   };\n    //   return (\n    //     <div style={{display: 'flex', justifyContent: 'flex-end', marginBottom:'15px'}}>\n    //       <input type=\"text\" ref={ n => input = n } onChange={ handleClick } className=\"textSearch\"/><i className=\"typcn typcn-times iconSearch\" onClick={ handleClear }></i><input type=\"submit\" onClick={ handleClick } value=\"\" className=\"btnSearch\"/>\n    //     </div>\n    //   );\n    // };\n\n    const onPageChange = (page, sizePerPage) => {\n        props.handlePageChange(page, sizePerPage);\n    }\n\n    const customTotal = (from, to, size) => (\n        <div className=\"react-bootstrap-table-pagination-total\" style={{ position: 'absolute', padding: '8px 4px', backgroundColor: 'white' }}>\n            Total <b>{size}</b>\n        </div>\n    );\n\n    const emptyDataMessage = () => { return 'No Data to Display'; }\n\n    const options = {\n        onPageChange: onPageChange,\n        paginationSize: 4,\n        pageStartIndex: 1,\n        alwaysShowAllBtns: false, // Always show next and previous button\n        // withFirstAndLast: false, // Hide the going to First and Last page button\n        hideSizePerPage: true, // Hide the sizePerPage dropdown always\n        // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n        firstPageText: '<<',\n        prePageText: '<',\n        nextPageText: '>',\n        lastPageText: '>>',\n        // nextPageTitle: 'First page',\n        // prePageTitle: 'Pre page',\n        // firstPageTitle: 'Next page',\n        // lastPageTitle: 'Last page',\n        showTotal: true,\n        paginationTotalRenderer: customTotal,\n        disablePageTitle: true,\n        sizePerPageList: [{\n            text: '10', value: 10\n        }, {\n            text: '20', value: 20\n        }, {\n            text: 'All', value: props.datas.length\n        }]\n    };\n\n    return (\n        <div>\n            <ToolkitProvider\n                keyField=\"id\"\n                data={props.datas}\n                columns={props.tableHead}\n                search={false}\n                caption={props.caption}\n            >\n                {\n                    (props) => (\n                        <div>\n                            {/* <SearchBar { ...props.searchProps } />\n                                <ClearSearchButton { ...props.searchProps } className=\"btn-outline-dark ml-1 mb-1\"/> */}\n                            {/* <MySearch { ...props.searchProps } /> */}\n                            {/* <hr /> */}\n                            <BootstrapTable\n                                {...props.baseProps}\n                                striped\n                                hover\n                                condensed\n                                wrapperClasses=\"table-responsive\"\n                                pagination={paginationFactory(options)}\n                                noDataIndication={emptyDataMessage}\n                            />\n                        </div>\n                    )\n                }\n            </ToolkitProvider>\n        </div>\n    )\n}\n\nexport default Table2Edit"],"sourceRoot":""}