{"version":3,"sources":["app/mia/Submission.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../../src/selector.js","../../src/util.js","../../src/eventHandlers.js","../../src/index.js"],"names":["Submission","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onEditorStateChange","editorState","contentState","getCurrentContent","contentStateToRaw","convertToRaw","setState","abstract_content","draftToHtml","handleChange","e","name","state","target","value","purpose","handleValidation","_this$state","abstract_title","abstract_desc","novelty_type","roi_value","hierarchy_level","change_level","description","err","Object","keys","length","undefined","concat","handleSubmit","validate","_this$state$purpose","dtime","Date","getTime","dataSubmit","id","employeeId","fullName","job","discipline","hse_value","cost_saving_value","status","cekExisting","localStorage","getItem","arrSubmission","JSON","parse","push","convertJson","stringify","setItem","Swal","fire","title","icon","text","then","history","msgValidate","toString","replace","EditorState","createEmpty","personalData","file_abstract","novelty_new_file","novelty_exist_file","roi_file","hse_file","cost_saving_file","_createClass","key","bsCustomFileInput","init","dataUser","this","dept","_this2","React","createElement","className","Form","Control","type","onChange","placeholder","disabled","Select","isClearable","options","label","required","Editor","toolbarClassName","wrapperClassName","editorClassName","editorStyle","border","height","htmlFor","Check","checked","novelty_new_description","novelty_existing_description","roi_description","hse_description","cost_saving_description","application_boundary_description","change_level_description","as","rows","Button","variant","onClick","style","fontSize","Component","defineProperty","exports","default","_len","arguments","validators","Array","_key","allPropTypes","_len2","args","_key2","error","forEach","validator","result","apply","_createChainableTypeChecker2","obj","_createChainableTypeChecker","require","__esModule","module","checkType","isRequired","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","Error","chainedCheckType","bind","Selector","getDefaultText","input","defaultText","parentNode","querySelector","textContent","findFirstChildNode","element","childNodes","slice","i","node","nodeType","restoreDefaultText","fileApi","window","File","handleInputChange","inputValue","hasAttribute","files","map","file","join","indexOf","splittedValue","split","getSelectedFiles","handleFormReset","customFileList","querySelectorAll","filter","len","Event","inputSelector","formSelector","customFileInputList","document","formList","writable","addEventListener","destroy","form","removeEventListener"],"mappings":"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","file":"static/js/26.7b3e7be5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { EditorState, convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from 'draftjs-to-html';\nimport Select from 'react-select';\nimport Swal from 'sweetalert2';\n\nexport class Submission extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      contentState: '',\n      personalData: {},\n      fullName: '',\n      employeeId: 0,\n      job: '',\n      discipline: '',\n      purpose: {},\n      abstract_title: '',\n      abstract_desc: '',\n      abstract_content: '',\n      file_abstract: '',\n      novelty_type: '',\n      novelty_new_file: '',\n      novelty_exist_file: '',\n      roi_value: 0,\n      roi_file: '',\n      hse_value: 0,\n      hse_file: '',\n      cost_saving_value: 0,\n      cost_saving_file: '',\n      hierarchy_level: 0,\n      change_level: 0,\n      description: ''\n    }\n  }\n  componentDidMount() {\n    bsCustomFileInput.init()\n    const dataUser = JSON.parse(localStorage.getItem('dataUser'))\n    this.setState({ fullName: dataUser?.name, employeeId: dataUser?.id, job: dataUser?.job, discipline: dataUser?.dept })\n  }\n\n  onEditorStateChange = (editorState) => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateToRaw = convertToRaw(contentState)\n    // console.log('content state', draftToHtml(contentStateToRaw));\n\n    this.setState({ editorState, contentState: contentStateToRaw, abstract_content: draftToHtml(contentStateToRaw) })\n  }\n\n  handleChange = (e, name) => {\n    const state = this.state\n    if (name === 'abstract_content') {\n      this.setState({ abstract_content: e.target.value })\n    } else if (name === 'purpose' && e === null) {\n      this.setState({ purpose: {} })\n    } else if (name === 'purpose') {\n      this.setState({ purpose: e })\n    } else {\n      state[e.target.name] = e.target.value\n      this.setState(state)\n    }\n  }\n\n  handleValidation = () => {\n    const { purpose, abstract_title, abstract_desc, abstract_content, novelty_type, roi_value, hierarchy_level, change_level, description } = this.state\n    let err = []\n    if (Object.keys(purpose).length === 0 || purpose === undefined) {\n      err = err.concat('Purpose')\n    }\n    if (abstract_title.length === 0) {\n      err = err.concat('Abstract Title')\n    }\n    if (abstract_desc.length === 0) {\n      err = err.concat('Abstract Description')\n    }\n    if (abstract_content.length === 0) {\n      err = err.concat('Abstract Content')\n    }\n    if (novelty_type === 0) {\n      err = err.concat('Novelty')\n    }\n    if (roi_value === 0) {\n      err = err.concat('ROI')\n    }\n    if (hierarchy_level === 0) {\n      err = err.concat('Asset Hierarchy Level')\n    }\n    if (change_level === 0) {\n      err = err.concat('Change Level')\n    }\n    if (description.length === 0) {\n      err = err.concat('Risk Description')\n    }\n    return err\n  }\n\n  handleSubmit = () => {\n    const validate = this.handleValidation()\n\n    if (validate.length === 0) {\n      const dtime = new Date().getTime()\n      const dataSubmit = {\n        id: this.state.employeeId + dtime,\n        fullName: this.state.fullName,\n        employeeId: this.state.employeeId,\n        job: this.state.job,\n        discipline: this.state.discipline,\n        purpose: this.state.purpose?.value,\n        abstract_title: this.state.abstract_title,\n        abstract_desc: this.state.abstract_desc,\n        abstract_content: this.state.abstract_content,\n        novelty_type: this.state.novelty_type,\n        roi_value: this.state.roi_value,\n        hse_value: this.state.hse_value,\n        cost_saving_value: this.state.cost_saving_value,\n        hierarchy_level: this.state.hierarchy_level,\n        change_level: this.state.change_level,\n        description: this.state.description,\n        status: \"clustering\"\n      }\n      const cekExisting = localStorage.getItem('dataSubmission')\n      let arrSubmission = []\n      if (cekExisting !== null) {\n        arrSubmission = JSON.parse(cekExisting)\n      }\n      arrSubmission.push(dataSubmit)\n      const convertJson = JSON.stringify(arrSubmission)\n      localStorage.setItem('dataSubmission', convertJson)\n      Swal.fire({\n        title: 'Success',\n        icon: 'warning',\n        text: 'Submit data success'\n      }).then(() => {\n        this.props.history.push('/mia/clustering')\n      })\n    } else {\n      const labelValidate = validate.toString()\n      const addSpace = labelValidate.replace(/,/g, ', ')\n      const msgValidate = addSpace + ' : ...must be filled'\n      Swal.fire({\n        title: 'Warning',\n        icon: 'warning',\n        text: msgValidate\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container d-flex p-md-0\">\n          <div className=\"az-content-body pd-lg-l-40 d-flex flex-column\">\n            <div className=\"az-content-breadcrumb\">\n              <span>MIA</span>\n              <span>Submission</span>\n            </div>\n            <h2 className=\"az-content-title\">Submission</h2>\n\n            <div className=\"az-content-label mg-b-5\">Fill Your Personal Data</div>\n            <p className=\"mg-b-20 font-italic\">All fields are required</p>\n\n            <form className=\"needs-validation was-validated\">\n              <div className=\"row row-sm\">\n                <div className=\"col-lg-6\">\n                  <span className=\"font-weight-bold font-italic\">Full Name</span>\n                  <Form.Control type=\"text\" name='fullName' value={this.state.fullName} onChange={(e) => this.handleChange(e, 'fullName')} placeholder=\"Full Name\" disabled />\n                </div>\n                <div className=\"col-lg-6\">\n                  <span className=\"font-weight-bold font-italic\">Employee ID</span>\n                  <Form.Control type=\"text\" name='employeeId' value={this.state.employeeId} onChange={(e) => this.handleChange(e, 'employeeId')} placeholder=\"Employee ID\" disabled />\n                </div>\n              </div>\n              <div className=\"row row-sm mt-3\">\n                <div className=\"col-lg-6\">\n                  <span className=\"font-weight-bold font-italic\">Function</span>\n                  <Form.Control type=\"text\" name='job' value={this.state.job} onChange={(e) => this.handleChange(e, 'job')} placeholder=\"Function\" disabled />\n                </div>\n                <div className=\"col-lg-6\">\n                  <span className=\"font-weight-bold font-italic\">Discipline</span>\n                  <Form.Control type=\"text\" name='discipline' value={this.state.discipline} onChange={(e) => this.handleChange(e, 'discipline')} placeholder=\"Discipline\" disabled />\n                </div>\n              </div>\n              <div className=\"row row-sm mt-3\">\n                <div className=\"col-lg-6\">\n                  <span className=\"font-weight-bold font-italic\">Innovation Purpose</span>\n                  <Select className=\"w-100\" name='purpose' value={this.state.purpose} onChange={(e) => this.handleChange(e, 'purpose')}\n                    isClearable={true}\n                    options={[\n                      { value: 'Increase Production', label: 'Increase Production' },\n                      { value: 'Reduce Cost', label: 'Reduce Cost' },\n                      { value: 'Increase Efficiency', label: 'Increase Efficiency' },\n                      { value: 'Environmental Sustainability', label: 'Environmental Sustainability' },\n                      { value: 'Reduced Risk', label: 'Reduced Risk' }\n                    ]}\n                  />\n                </div>\n              </div>\n\n              <hr className=\"mg-y-30\" />\n\n              <div className=\"az-content-label mg-b-5\">Enter Your Abstraction</div>\n              <p className=\"mg-b-20 font-italic\">All fields are required</p>\n\n              <div className=\"row row-sm\">\n                <div className=\"col-lg-12\">\n                  <span className=\"font-weight-bold font-italic\">Title</span>\n                  <Form.Control type=\"text\" name='abstract_title' value={this.state.abstract_title} onChange={(e) => this.handleChange(e, 'abstract_title')} placeholder=\"Title\" required />\n                </div>\n              </div>\n              <div className=\"row row-sm mt-3\">\n                <div className=\"col-lg-12\">\n                  <span className=\"font-weight-bold font-italic\">Description</span>\n                  <Form.Control type=\"text\" name='abstract_desc' value={this.state.abstract_desc} onChange={(e) => this.handleChange(e, 'abstract_desc')} placeholder=\"Description\" required />\n                </div>\n              </div>\n              <div className=\"row row-sm mt-3\">\n                <div className=\"col-lg-12\">\n                  <span className=\"font-weight-bold font-italic\">Abstract</span>\n                  <Editor\n                    // name = \"abstract_content\"\n                    // value={this.state.abstract_content}\n                    editorState={this.state.editorState}\n                    toolbarClassName=\"toolbarClassName\"\n                    wrapperClassName=\"wrapperClassName\"\n                    editorClassName=\"editorClassName\"\n                    onEditorStateChange={this.onEditorStateChange}\n                    editorStyle={{ border: \"1px solid #cdcdcd\", height: \"270px\" }}\n                  // onChange={(e) => this.handleChange(e, 'abstract_content')}\n                  />\n                </div>\n              </div>\n            </form>\n            <div className=\"row row-sm mt-3\">\n              <div className=\"col-lg-12\">\n                <span className=\"font-weight-bold font-italic\">Upload Attachment</span><br />\n                <div className=\"custom-file w-25\">\n                  <Form.Control type=\"file\" className=\"custom-file-input\" />\n                  <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <hr className=\"mg-y-30\" />\n            </div>\n\n            <div className=\"az-content-label mg-b-5\">Novelty</div>\n            <p className=\"mg-b-20 font-italic\">Select One</p>\n\n            <div className=\"row row-sm\">\n              <div className=\"col-lg-12\">\n                <span className=\"font-weight-bold font-italic\">Type</span>\n                <div>\n                  <div className='mt-1'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`New`}\n                      value={'New'}\n                      label={'New'}\n                      className={'rdiobox'}\n                      name=\"novelty_type\"\n                      checked={this.state.novelty_type === \"New\"}\n                      onChange={(e) => this.handleChange(e, 'nvRadio')}\n                    />\n                    <span className='font-italic'>Relative no evidence or never be found anywhere in Medco Organization ideas, process, system, part, equipment or devices at any kind or form of modification, installation or usage partly or entirely whether small or big magnitude in Medco Organization</span><br />\n                    <div className=\"mg-t-10 mg-b-10\">\n                      <Form.Control type=\"text\" name='novelty_new_description' value={this.state.novelty_new_description} onChange={(e) => this.handleChange(e, 'novelty_new_description')} placeholder=\"Input Description\" disabled={this.state.novelty_type === 'New' ? \"\" : \"disabled\"} />\n                    </div>\n                    <div className=\"custom-file w-25\">\n                      <Form.Control type=\"file\" className=\"custom-file-input\" disabled={this.state.novelty_type === 'New' ? \"\" : \"disabled\"} />\n                      <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                    </div>\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`Exist`}\n                      value={'Improve Existing'}\n                      label={'Improve Existing'}\n                      className={'rdiobox'}\n                      name=\"novelty_type\"\n                      checked={this.state.novelty_type === \"Improve Existing\"}\n                      onChange={(e) => this.handleChange(e, 'nvRadio')}\n                    />\n                    <span className='font-italic'>Ideas, process, system, part, equipment or devices at any kind or form of modification, installation or usage partly or entirely whether small or big magnitude but there is at least one evidence that it has connection, interference or interface to the existing entity (could be systems, process, etc in Medco Organization</span><br />\n                    <div className=\"mg-t-10 mg-b-10\">\n                      <Form.Control type=\"text\" name='novelty_existing_description' value={this.state.novelty_existing_description} onChange={(e) => this.handleChange(e, 'novelty_existing_description')} placeholder=\"Input Description\" disabled={this.state.novelty_type === 'Improve Existing' ? \"\" : \"disabled\"} />\n                    </div>\n                    <div className=\"custom-file w-25\">\n                      <Form.Control type=\"file\" className=\"custom-file-input\" disabled={this.state.novelty_type === 'Improve Existing' ? \"\" : \"disabled\"} />\n                      <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <hr className=\"mg-y-30\" />\n            </div>\n\n            <div className=\"az-content-label mg-b-5\">Impact Value</div>\n            <p className=\"mg-b-20 font-italic\">Select One</p>\n\n            <div className=\"row row-sm\">\n              <div className=\"col-lg-4\">\n                <span className=\"font-weight-bold font-italic\">ROI</span>\n                <div>\n                  <div className='mt-1'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'roi4'}\n                      value={'Very High | >20%'}\n                      label={'Very High | >20%'}\n                      className={'rdiobox'}\n                      name=\"roi_value\"\n                      onChange={(e) => this.handleChange(e, 'roi_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'roi3'}\n                      value={'High | 15-20%'}\n                      label={'High | 15-20%'}\n                      className={'rdiobox'}\n                      name=\"roi_value\"\n                      onChange={(e) => this.handleChange(e, 'roi_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'roi2'}\n                      value={'Medium | 10-15%'}\n                      label={'Medium | 10-15%'}\n                      className={'rdiobox'}\n                      name=\"roi_value\"\n                      onChange={(e) => this.handleChange(e, 'roi_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'roi1'}\n                      value={'Moderate | <10%'}\n                      label={'Moderate | <10%'}\n                      className={'rdiobox'}\n                      name=\"roi_value\"\n                      onChange={(e) => this.handleChange(e, 'roi_value')}\n                    />\n                  </div>\n                  <div className=\"mg-t-10 mg-b-10\">\n                      <Form.Control type=\"text\" name='roi_description' value={this.state.roi_description} onChange={(e) => this.handleChange(e, 'roi_description')} placeholder=\"Input Description\" />\n                  </div>\n                  <div className=\"custom-file mt-2\">\n                    <Form.Control type=\"file\" className=\"custom-file-input\" />\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-lg-4\">\n                <span className=\"font-weight-bold font-italic\">HSE</span>\n                <div>\n                  <div className='mt-1'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'hse4'}\n                      value={'Remove Hazard'}\n                      label={'Remove Hazard'}\n                      className={'rdiobox'}\n                      name=\"hse_value\"\n                      onChange={(e) => this.handleChange(e, 'hse_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'hse3'}\n                      value={'Minimize Hazard'}\n                      label={'Minimize Hazard'}\n                      className={'rdiobox'}\n                      name=\"hse_value\"\n                      onChange={(e) => this.handleChange(e, 'hse_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'hse2'}\n                      value={'Contain Hazard'}\n                      label={'Contain Hazard'}\n                      className={'rdiobox'}\n                      name=\"hse_value\"\n                      onChange={(e) => this.handleChange(e, 'hse_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={'hse1'}\n                      value={'Protect Hazard'}\n                      label={'Protect Hazard'}\n                      className={'rdiobox'}\n                      name=\"hse_value\"\n                      onChange={(e) => this.handleChange(e, 'hse_value')}\n                    />\n                  </div>\n                  <div className=\"mg-t-10 mg-b-10\">\n                      <Form.Control type=\"text\" name='hse_description' value={this.state.hse_description} onChange={(e) => this.handleChange(e, 'hse_description')} placeholder=\"Input Description\" />\n                  </div>\n                  <div className=\"custom-file mt-2\">\n                    <Form.Control type=\"file\" className=\"custom-file-input\" />\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-lg-4\">\n                <span className=\"font-weight-bold font-italic\">Cost Saving</span>\n                <div>\n                  <div className='mt-1'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`cs5`}\n                      value={'Extremely High Impact | > 1 MM USD'}\n                      label={'Extremely High Impact | > 1 MM USD'}\n                      className={'rdiobox'}\n                      name=\"cost_saving_value\"\n                      onChange={(e) => this.handleChange(e, 'cost_saving_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`cs4`}\n                      value={'Very High Impact | 500 - 1 MM USD'}\n                      label={'Very High Impact | 500 - 1 MM USD'}\n                      className={'rdiobox'}\n                      name=\"cost_saving_value\"\n                      onChange={(e) => this.handleChange(e, 'cost_saving_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`cs3`}\n                      value={'Moderate High Impact | 100 - 500 K USD'}\n                      label={'Moderate High Impact | 100 - 500 K USD'}\n                      className={'rdiobox'}\n                      name=\"cost_saving_value\"\n                      onChange={(e) => this.handleChange(e, 'cost_saving_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`cs2`}\n                      value={'Moderate Impact | 50 K - 100 K USD'}\n                      label={'Moderate Impact | 50 K - 100 K USD'}\n                      className={'rdiobox'}\n                      name=\"cost_saving_value\"\n                      onChange={(e) => this.handleChange(e, 'cost_saving_value')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`cs1`}\n                      value={'Low Impact | < 50 K USD'}\n                      label={'Low Impact | < 50 K USD'}\n                      className={'rdiobox'}\n                      name=\"cost_saving_value\"\n                      onChange={(e) => this.handleChange(e, 'cost_saving_value')}\n                    />\n                  </div>\n                  <div className=\"mg-t-10 mg-b-10\">\n                      <Form.Control type=\"text\" name='cost_saving_description' value={this.state.cost_saving_description} onChange={(e) => this.handleChange(e, 'cost_saving_description')} placeholder=\"Input Description\" />\n                  </div>\n                  <div className=\"custom-file mt-2\">\n                    <Form.Control type=\"file\" className=\"custom-file-input\" />\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <hr className=\"mg-y-30\" />\n            </div>\n\n            <div className=\"az-content-label mg-b-5\">Application Boundary</div>\n            <p className=\"mg-b-20 font-italic\">Select One</p>\n\n            <div className=\"row row-sm\">\n              <div className=\"col-lg-12\">\n                <span className=\"font-weight-bold font-italic\">Asset Hierarchy Level</span>\n                <div>\n                  <div className='mt-1'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset1`}\n                      value={'Facility | Train A'}\n                      label={'Facility | Train A'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset2`}\n                      value={'System | Compressor Train A'}\n                      label={'System | Compressor Train A'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset3`}\n                      value={'Sub System | Compressor'}\n                      label={'Sub System | Compressor'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset4`}\n                      value={'Equipment | Turbo Compressor Package Train A'}\n                      label={'Equipment | Turbo Compressor Package Train A'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset5`}\n                      value={'Sub Equipment | Train A LP Compressor'}\n                      label={'Sub Equipment | Train A LP Compressor'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset6`}\n                      value={'Component | Flow Glass - From NDE Journal Bearing C-2720 TO Gas Turbinelube Oil Train A'}\n                      label={'Component | Flow Glass - From NDE Journal Bearing C-2720 TO Gas Turbinelube Oil Train A'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset7`}\n                      value={'Part | Proximity Probe - NDE Bearing Vibration (X) LP Compressor Train A'}\n                      label={'Part | Proximity Probe - NDE Bearing Vibration (X) LP Compressor Train A'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`asset8`}\n                      value={'Other | Logistic'}\n                      label={'Other | Logistic'}\n                      className={'rdiobox'}\n                      name=\"hierarchy_level\"\n                      onChange={(e) => this.handleChange(e, 'hierarchy_level')}\n                    />\n                  </div>\n                  <div className=\"mg-t-10 mg-b-10\">\n                      <Form.Control type=\"text\" name='application_boundary_description' value={this.state.application_boundary_description} onChange={(e) => this.handleChange(e, 'application_boundary_description')} placeholder=\"Input Description\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <hr className=\"mg-y-30\" />\n            </div>\n\n            <div className=\"az-content-label mg-b-5\">Change Level</div>\n            <p className=\"mg-b-20 font-italic\">Select One</p>\n\n            <div className=\"row row-sm\">\n              <div className=\"col-lg-12\">\n                <span className=\"font-weight-bold font-italic\">Level</span>\n                <div>\n                  <div className='mt-1'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`level1`}\n                      value={'Low | Applied Change to Existing Procewss or Introduce New Change - less than or at least 2 Steps/Processes'}\n                      label={'Low | Applied Change to Existing Procewss or Introduce New Change - less than or at least 2 Steps/Processes'}\n                      className={'rdiobox'}\n                      name=\"change_level\"\n                      onChange={(e) => this.handleChange(e, 'change_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`level2`}\n                      value={'Medium | Applied Change to Existing Procewss or Introduce New Change - less than or at least 5 Steps/Processes'}\n                      label={'Medium | Applied Change to Existing Procewss or Introduce New Change - less than or at least 5 Steps/Processes'}\n                      className={'rdiobox'}\n                      name=\"change_level\"\n                      onChange={(e) => this.handleChange(e, 'change_level')}\n                    />\n                  </div>\n                  <div className='mt-2'>\n                    <Form.Check\n                      type={'radio'}\n                      id={`level3`}\n                      value={'High/Radical | Applied Change to Existing Procewss or Introduce New Change - more than Steps/Process'}\n                      label={'High/Radical | Applied Change to Existing Procewss or Introduce New Change - more than Steps/Process'}\n                      className={'rdiobox'}\n                      name=\"change_level\"\n                      onChange={(e) => this.handleChange(e, 'change_level')}\n                    />\n                  </div>\n                  <div className=\"mg-t-10 mg-b-10\">\n                      <Form.Control type=\"text\" name='change_level_description' value={this.state.change_level_description} onChange={(e) => this.handleChange(e, 'change_level_description')} placeholder=\"Input Description\" />\n                    </div>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <hr className=\"mg-y-30\" />\n            </div>\n\n            <div className=\"az-content-label mg-b-5\">Risk & Mitigation Plan</div>\n            <p className=\"mg-b-20 font-italic\">Description is required</p>\n\n            <form className=\"needs-validation was-validated\">\n              <div className=\"row row-sm\">\n                <div className=\"col-lg-12\">\n                  <span className=\"font-weight-bold font-italic\">Description</span>\n                  <Form.Control as=\"textarea\" rows=\"3\" name=\"description\" placeholder=\"Input description\" onChange={(e) => this.handleChange(e, 'description')} required />\n                </div>\n              </div>\n            </form>\n            <div className=\"custom-file mg-t-10 w-25\">\n              <Form.Control type=\"file\" className=\"custom-file-input\" />\n              <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\n            </div>\n\n            <div>\n              <hr className=\"mg-y-30\" />\n            </div>\n\n            <div className=\"row row-sm\">\n              <div className=\"col-sm-6 col-md-12 mg-sm-t-0\">\n                <Button variant=\"az-secondary btn-block\" onClick={this.handleSubmit}><i className=\"typcn typcn-location-arrow\" style={{ fontSize: '18px' }}></i> Submit</Button>\n              </div>\n              <div className=\"row row-xs wd-xl-80p\">\n                <div className=\"col-sm-6 col-md-2 mg-t-10\"><Button variant=\"success btn-block\"><i className=\"typcn typcn-printer\" style={{ fontSize: '18px' }}></i> Save</Button></div>\n                <div className=\"col-sm-6 col-md-2 mg-t-10\"><Button variant=\"warning btn-block\"><i className=\"typcn typcn-pencil\" style={{ fontSize: '18px' }}></i> Edit</Button></div>\n                <div className=\"col-sm-6 col-md-2 mg-t-10\"><Button variant=\"danger btn-block\"><i className=\"typcn typcn-times\" style={{ fontSize: '18px' }}></i> Cancel</Button></div>\n                <div className=\"col-sm-6 col-md-2 mg-t-10\"><Button variant=\"light btn-block\"><i className=\"typcn typcn-download\" style={{ fontSize: '18px' }}></i> Download</Button></div>\n              </div>\n            </div>{/* row */}\n\n          </div>{/* az-content-body */}\n        </div>{/* container */}\n      </div >\n    )\n  }\n}\n\nexport default Submission","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n"],"sourceRoot":""}