{"version":3,"sources":["app/transaction/modal/Symptom.js","app/transaction/RejectCard.js","app/commons/Table/Table2EditSelect.js","app/commons/Table/Table2EditSearch.js"],"names":["Symptom","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","componentDidUpdate","prevProps","open","setState","symptom","quantity","handleChange","e","name","state","_defineProperty","target","value","handleValidation","_this$state","err","concat","length","handleSubmit","param","validate","onSubmit","onClose","msgValidate","toString","replace","Swal","fire","title","icon","text","_createClass","key","_this2","React","createElement","Modal","show","this","onHide","size","Header","closeButton","Title","className","Body","Select","onChange","isClearable","options","listSymptomOption","Form","Control","type","placeholder","Button","variant","onClick","style","fontSize","Component","RejectCard","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","sizePerPage","setSizePerPage","_useState5","_useState6","datasPart","setDatasPart","_useState7","_useState8","datas","setDatas","_useState9","_useState10","_useState11","_useState12","selectedRows","setSelectedRows","_useState13","_useState14","openModalSymptom","setOpenModalSymptom","dataSymptoms","localStorage","getItem","_useState15","_useState16","setListSymptomOption","_useState17","_useState18","listDefaultSymptomOption","setListDefaultSymptomOption","localRc","JSON","parse","_useState19","id","no_rc","process","operator_id_create","operator_id_cancel","sloc_asal","bin","beban","part_number_induk","part_induk_desc","part_number_anak","part_anak_desc","mrp_controller","reject_symptom","supplier_code","supplier_desc","jumlah","quality_quantity","symptoms","sloc_tujuan","action","vendor_repair","status","alasan_reprint","delivery_note_take_part","plat_number_reject_take","estimated_date_take_project","estimated_time_take_project","actual_date_give_project","actual_time_give_project","operator_id_give_part","delivery_note_give_part","plat_number_reject_give","estimated_date_give_part","estimated_time_give_part","actual_date_receive_part","actual_time_receive_part","operator_id_receiver_part","_useState20","rc","setRc","_useState21","_useState22","setProcess","_useState23","_useState24","processOption","setProcessOption","_useState25","_useState26","slocAsal","setSlocAsal","_useState27","label","_useState28","slocAsalOption","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","rejectSymptom","setRejectSymptom","_useState35","_useState36","rejectSymptomOption","_useState37","_useState38","setBeban","_useState39","_useState40","supplierCode","setSupplierCode","_useState41","_useState42","supplierCodeOption","setSupplierCodeOption","_useState43","_useState44","supplierTempOption","setSupplierTempOption","_useState45","_useState46","quantityQuality","setQuantityQuality","_useState47","_useState48","quantityQualityOption","setQuantityQualityOption","_useState49","_useState50","setAction","_useState51","_useState52","actionOption","setActionOption","_useState53","_useState54","setShow","_useState55","_useState56","modalTitle","setModalTitle","useEffect","dataUser","_objectSpread","opt","dept","handleClose","handleShow","stopPropagation","dt","dtSource","filter","el","isParent","isActive","console","log","part_number_parent","_objectSpread2","handleChangeSelect","norc","nrc","cat","dtSymptom","forEach","catSymptomp","push","nameSymptomp","loadSymptomList","tujuan","handleCreate","dataRc","newId","Math","max","apply","_toConsumableArray","map","o","newLocalRc","setItem","stringify","then","window","location","reload","handlePageChange","page","handleSelectRow","row","isSelect","array","index","findIndex","splice","columns","dataField","headerAlign","align","formatter","cell","rowIndex","rowNumber","headerStyle","colum","colIndex","width","editable","columnsPart","isDummyField","cellContent","part_number","part_number_desc","vendor_desc","vendor_code","handleSelectPart","class","for","disabled","isDisabled","href","lineHeight","display","newList","item","every","cancelButtonText","cancelButtonColor","confirmButtonText","confirmButtonColor","showCancelButton","result","newDatas","includes","Table2EditSelect","caption","tableHead","BarCode","height","ModalSymptom","dataSubmit","newData","Table2EditSearch","emptyDataMessage","onPageChange","paginationSize","pageStartIndex","alwaysShowAllBtns","hideSizePerPage","firstPageText","prePageText","nextPageText","lastPageText","showTotal","paginationTotalRenderer","from","to","position","padding","backgroundColor","disablePageTitle","sizePerPageList","selectRow","mode","clickToSelect","bgColor","onSelect","onSelectAll","ToolkitProvider","keyField","data","search","BootstrapTable","Object","assign","baseProps","striped","hover","condensed","wrapperClasses","pagination","paginationFactory","noDataIndication","Table2Edit","MySearch","input","handleClick","onSearch","justifyContent","marginBottom","ref","n","marginTop","searchProps"],"mappings":"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","file":"static/js/29.cbd37c90.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Swal from \"sweetalert2\";\n\nexport class Symptom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      symptom: null,\n      quantity: \"\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.open !== this.props.open) {\n      this.setState({\n        symptom: null,quantity: \"\",\n      });\n    }\n  };\n\n  handleChange = (e, name) => {\n    const state = this.state;\n    if (name === \"symptom\" && e === null) {\n      this.setState({ [name]: null });\n    } else if (name === \"symptom\") {\n      this.setState({ [name]: e });\n    } else {\n      state[e.target.name] = e.target.value;\n      this.setState(state);\n    }\n  };\n\n  handleValidation = () => {\n    const { symptom, quantity } = this.state;\n    let err = [];\n    if (symptom === null) {\n      err = err.concat(\"Symptom\");\n    }\n    if (quantity.length === 0 || quantity < 1) {\n      err = err.concat(\"quantity\");\n    }\n    return err;\n  };\n\n  handleSubmit = (e, param) => {\n    const validate = this.handleValidation();\n\n    if (validate.length === 0) {\n      // Swal.fire({\n      //   title: \"Warning\",\n      //   text: \"Are you sure you want to add this data?\",\n      //   icon: \"warning\",\n      //   cancelButtonText: \"Cancel!\",\n      //   cancelButtonColor: \"#d33\",\n      //   confirmButtonText: \"Yes!\",\n      //   confirmButtonColor: \"#3085d6\",\n      //   showCancelButton: true,\n      // }).then((result) => {\n        // if (result.value) {\n          this.props.onSubmit({\n            symptom: this.state.symptom,\n            quantity: this.state.quantity,\n          });\n          this.setState({symptom: null,quantity: \"\"})\n          this.props.onClose();\n        // }\n      // });\n    } else {\n      const labelValidate = validate.toString();\n      const addSpace = labelValidate.replace(/,/g, \", \");\n      const msgValidate = addSpace + \" : ...must be filled\";\n      Swal.fire({\n        title: \"Warning\",\n        icon: \"warning\",\n        text: msgValidate,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.open} onHide={this.props.onClose} size=\"sm\">\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <div className=\"div-icon modal-icon\">\n              <i className=\"typcn typcn-plus\"></i>\n            </div>{\" \"}\n            Symptom\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"row row-sm w-100\">\n            <div className=\"col-lg-12\">\n              <span className=\"font-weight-bold font-italic\">Name Symptom</span>\n              <Select\n                className=\"w-100\"\n                name=\"symptom\"\n                value={this.state.symptom}\n                onChange={(e) => this.handleChange(e, \"symptom\")}\n                isClearable={true}\n                options={this.props.listSymptomOption}\n              />\n            </div>\n            <div className=\"col-lg-12 mt-3\">\n              <span className=\"font-weight-bold font-italic\">Quantity</span>\n              <Form.Control\n                type=\"number\"\n                name=\"quantity\"\n                value={this.state.quantity}\n                onChange={(e) => this.handleChange(e, \"quantity\")}\n                placeholder=\"Input Quantity\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <hr className=\"mg-y-30\" />\n          </div>\n\n          <div className=\"row row-sm\">\n            <div className=\"col-sm-6\">\n              <Button\n                variant=\"success btn-block\"\n                onClick={(e) => this.handleSubmit(e)}\n              >\n                <i\n                  className=\"typcn typcn-tick\"\n                  style={{ fontSize: \"18px\" }}\n                ></i>{\" \"}\n                Submit\n              </Button>\n            </div>\n            <div className=\"col-sm-6\">\n              <Button variant=\"danger btn-block\" onClick={this.props.onClose}>\n                <i\n                  className=\"typcn typcn-times\"\n                  style={{ fontSize: \"18px\" }}\n                ></i>{\" \"}\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default Symptom;\n","import React, { useState, useEffect } from \"react\";\nimport BarCode from 'react-barcode';\nimport Select from \"react-select\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Table2EditSelect from \"../commons/Table/Table2EditSelect\";\nimport Table2EditSearch from \"../commons/Table/Table2EditSearch\";\nimport ModalSymptom from \"./modal/Symptom\";\nimport Swal from \"sweetalert2\";\nimport Modal from \"react-bootstrap/Modal\";\n\nfunction RejectCard() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sizePerPage, setSizePerPage] = useState(5);\n  const [datasPart, setDatasPart] = useState([]);\n  const [datas, setDatas] = useState([]);\n  const [defaultDatas, setDefaultDatas] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [openModalSymptom, setOpenModalSymptom] = useState(false);\n  const dataSymptoms = localStorage.getItem(\"dataSymptoms\");\n  const [listSymptomOption, setListSymptomOption] = useState([]);\n  const [listDefaultSymptomOption, setListDefaultSymptomOption] = useState([]);\n  const localRc = JSON.parse(localStorage.getItem('dataRc'));\n  const [rc, setRc] = useState({\n    id: \"\",\n    no_rc: \"\",\n    process: \"\",\n    operator_id_create: \"\",\n    operator_id_cancel: \"\",\n    sloc_asal: \"\",\n    bin: \"\",\n    beban: \"\",\n    part_number_induk: \"\",\n    part_induk_desc: \"\",\n    part_number_anak: \"\",\n    part_anak_desc: \"\",\n    mrp_controller: \"\",\n    reject_symptom: \"\",\n    supplier_code: \"\",\n    supplier_desc: \"\",\n    jumlah: \"\",\n    quality_quantity: \"\",\n    symptoms: [],\n    sloc_tujuan: \"\",\n    action: \"\",\n    vendor_repair: \"\",\n    status: \"\",\n    alasan_reprint: \"\",\n    delivery_note_take_part: \"\",\n    plat_number_reject_take: \"\",\n    estimated_date_take_project: \"\",\n    estimated_time_take_project: \"\",\n    actual_date_give_project: \"\",\n    actual_time_give_project: \"\",\n    operator_id_give_part: \"\",\n    delivery_note_give_part: \"\",\n    plat_number_reject_give: \"\",\n    estimated_date_give_part: \"\",\n    estimated_time_give_part: \"\",\n    actual_date_receive_part: \"\",\n    actual_time_receive_part: \"\",\n    operator_id_receiver_part: \"\"    \n  });\n\n  const [process, setProcess] = useState(null);\n  const [processOption, setProcessOption] = useState([]);\n\n  const [slocAsal, setSlocAsal] = useState(null);\n  const [slocAsalOption, setAlocAsalOption] = useState([\n    { value: \"M401\", label: \"M401\" },\n    {\n      value: \"M402\",\n      label: \"M402\",\n    },\n    { value: \"M404\", label: \"M404\" },\n    { value: \"M405\", label: \"M405\" },\n    { value: \"M406\", label: \"M406\" },\n    { value: \"M501\", label: \"M501\" },\n    { value: \"M502\", label: \"M502\" },\n    { value: \"M503\", label: \"M503\" },\n  ]);\n\n  const [mrp, setMrp] = useState(null);\n  const [mrpOption, setMrpOption] = useState([]);\n\n  const [rejectSymptom, setRejectSymptom] = useState(null);\n  const [rejectSymptomOption, setRejectSymptomOption] = useState([\n    { value: \"Cairan\", label: \"Cairan\" },\n    { value: \"Electrical\", label: \"Electrical\" },\n    { value: \"Logam\", label: \"Logam\" },\n    { value: \"Plastik\", label: \"Plastik\" },\n  ]);\n\n  const [beban, setBeban] = useState(null);\n\n  const [supplierCode, setSupplierCode] = useState(null);\n  const [supplierCodeOption, setSupplierCodeOption] = useState([]);\n  const [supplierTempOption, setSupplierTempOption] = useState([]);\n\n  const [quantityQuality, setQuantityQuality] = useState(null);\n  const [quantityQualityOption, setQuantityQualityOption] = useState([]);\n\n  const [action, setAction] = useState(null);\n  const [actionOption, setActionOption] = useState([]);\n\n  const [show, setShow] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n\n  useEffect(() => {\n    const dataUser = JSON.parse(localStorage.getItem(\"dataUser\"));\n    setRc({\n      ...rc,\n      operator_id_create: dataUser?.id,\n    });\n    let opt = [];\n    if (dataUser.dept === \"Manage Incoming Good\") {\n      opt = [{ value: \"A\", label: \"Receiving\" }];\n    } else if (dataUser.dept === \"Manage Putaway\") {\n      opt = [{ value: \"B\", label: \"Transfer & Confirm Putaway\" }];\n    } else if (dataUser.dept === \"Local Process\") {\n      opt = [\n        { value: \"C\", label: \"Assign Pro to Pallet\" },\n        { value: \"D\", label: \"Finish. Prod. Preparation\" },\n        { value: \"E\", label: \"Out Preparation\" },\n        { value: \"F\", label: \"Confirm Production Order\" },\n      ];\n    } else if (dataUser.dept === \"Manage Replenishment\") {\n      opt = [{ value: \"G\", label: \"Confirm Replenishment\" }];\n    } else if (dataUser.dept === \"Manage Picking\") {\n      opt = [{ value: \"H\", label: \"Custom Picking\" }];\n    } else if (dataUser.dept === \"Check & Pack\") {\n      opt = [{ value: \"I\", label: \"Validasi Picking\" }];\n    } else {\n      opt = [\n        { value: \"A\", label: \"Receiving\" },\n        { value: \"B\", label: \"Transfer & Confirm Putaway\" },\n        { value: \"C\", label: \"Assign Pro to Pallet\" },\n        { value: \"D\", label: \"Finish. Prod. Preparation\" },\n        { value: \"E\", label: \"Out Preparation\" },\n        { value: \"F\", label: \"Confirm Production Order\" },\n        { value: \"G\", label: \"Confirm Replenishment\" },\n        { value: \"H\", label: \"Custom Picking\" },\n        { value: \"I\", label: \"Validasi Picking\" },\n      ];\n    }\n    setProcessOption(opt);\n  }, []);\n\n  const handleClose = () => setShow(false);\n  const handleShow = (e, title) => {\n    e.stopPropagation();\n    let dt = [];\n    let dtSource = JSON.parse(localStorage.getItem(\"dataPartNumber\"));\n    if (title === \"Part Induk\") {\n      dt = dtSource.filter((el) => el.isParent && el.isActive === true);\n      setDatasPart(dt);\n    } else {\n      console.log(rc.part_number_induk, \"induk\");\n      dt = dtSource.filter(\n        (el) =>\n          el.part_number_parent === rc.part_number_induk && el.isActive === true\n      );\n      setDatasPart(dt);\n    }\n    setModalTitle(title);\n    setShow(true);\n  };\n\n  useEffect(() => {\n    if (rc.part_number_anak.length === 0) {\n      setSupplierTempOption([]);\n    }\n  }, [rc.part_number_anak]);\n\n  const handleSelectPart = (e, row) => {\n    e.stopPropagation();\n    if (modalTitle === \"Part Induk\") {\n      setRc({\n        ...rc,\n        part_number_induk: row.part_number,\n        part_induk_desc: row.part_number_desc,\n        part_number_anak: \"\",\n        part_anak_desc: \"\",\n        mrp_controller: \"\",\n      });\n    } else {\n      setRc({\n        ...rc,\n        part_number_anak: row.part_number,\n        part_anak_desc: row.part_number_desc,\n        mrp_controller: row.mrp_controller,\n        beban: e ? e.label : \"\",\n        supplier_desc: \"\",\n      });\n      setSupplierTempOption([\n        {\n          value: row.vendor_desc,\n          label: row.vendor_code,\n        },\n      ]);\n      setSupplierCode(null);\n      setBeban(null);\n    }\n\n    handleClose();\n  };\n\n  const loadSymptomList = (cat) => {\n    //--set list symptom\n    const dtSymptom = JSON.parse(dataSymptoms);\n    let opt = [];\n    dtSymptom.forEach((el) => {\n      if (el.catSymptomp === cat && el.status === \"Active\") {\n        opt.push({\n          id: el.id,\n          value: el.id,\n          label: el.nameSymptomp,\n        });\n      }\n    });\n    setListSymptomOption(opt);\n    setListDefaultSymptomOption(opt);\n  };\n\n  const handleChange = (e, name) => {\n    if (name === \"part_number_induk\" && e.target.value === \"\") {\n      setRc({\n        ...rc,\n        [name]: e.target.value,\n        part_number_anak: \"\",\n        part_anak_desc: \"\",\n      });\n    } else {\n      setRc({\n        ...rc,\n        [name]: e.target.value,\n      });\n    }\n  };\n\n  const handleChangeSelect = (e, name) => {\n    if (name === \"process\") {\n      setProcess(e);\n      let opt = [];\n      let norc = \"\";\n      if (e) {\n        if (e.label === \"Receiving\") {\n          opt = [{ value: \"Quality\", label: \"Quality\" }];\n        } else {\n          opt = [\n            { value: \"Quality\", label: \"Quality\" },\n            { value: \"Quantity\", label: \"Quantity\" },\n          ];\n        }\n        let nrc = localRc.filter(el => el.process === e.label).length+1;\n        if(nrc<10){\n          nrc = \"00\"+nrc;\n        }else if(nrc < 100){\n          nrc = \"0\"+nrc;\n        }else{\n          nrc = \"\"+nrc;\n        }\n        norc = \"RC\"+e.value+\"2023000\"+nrc;\n      }\n      setRc({\n        ...rc,\n        no_rc: norc.length === 0 ? \"\" : norc,\n        process: e ? e.label : \"\",\n        quality_quantity: \"\",\n      });\n      setQuantityQuality(null);\n      setAction(null);\n      setQuantityQualityOption(opt);\n    } else if (name === \"slocAsal\") {\n      setSlocAsal(e);\n      setRc({\n        ...rc,\n        sloc_asal: e ? e.label : \"\",\n      });\n    } else if (name === \"rejectSymptom\") {\n      setRejectSymptom(e);\n      setDatas([]);\n      setRc({\n        ...rc,\n        reject_symptom: e ? e.label : \"\",\n      });\n\n      if (e && e.label) {\n        loadSymptomList(e.label);\n      }\n    } else if (name === \"beban\") {\n      setBeban(e);\n      let opt = [];\n      if (e) {\n        if (e.label === \"Vendor\") {\n          opt = supplierTempOption;\n        } else {\n          opt = [\n            { label: \"SA\", value: \"Seksi A\" },\n            { label: \"SB\", value: \"Seksi B\" },\n            { label: \"SC\", value: \"Seksi C\" },\n          ];\n        }\n      }\n      setRc({\n        ...rc,\n        beban: e ? e.label : \"\",\n        supplier_desc: \"\",\n      });\n      setSupplierCode(null);\n      setSupplierCodeOption(opt);\n    } else if (name === \"quantityQuality\") {\n      setQuantityQuality(e);\n      let tujuan = \"\";\n      let opt = [];\n      if (e) {\n        if (e.label === \"Quantity\") {\n          tujuan = \"M407 Prov. To Vendor\";\n          opt = [\n            { value: \"Claim Goods\", label: \"Claim Goods\" },\n            { value: \"Debit Note\", label: \"Debit Note\" },\n            { value: \"Scrap\", label: \"Scrap\" },\n          ];\n        } else if (e.label === \"Quality\") {\n          tujuan = \"M407\";\n          opt = [\n            { value: \"Claim Goods\", label: \"Claim Goods\" },\n            { value: \"Repair to Vendor\", label: \"Repair to Vendor\" },\n            { value: \"Debit Note\", label: \"Debit Note\" },\n            { value: \"Scrap\", label: \"Scrap\" },\n          ];\n        }\n      }\n      setRc({\n        ...rc,\n        quality_quantity: e ? e.label : \"\",\n        sloc_tujuan: tujuan,\n      });\n      setAction(null);\n      setActionOption(opt);\n    } else if (name === \"action\") {\n      setAction(e);\n      setRc({\n        ...rc,\n        action: e ? e.label : \"\",\n      });\n    } else if (name === \"supplierCode\") {\n      setSupplierCode(e);\n      setRc({\n        ...rc,\n        supplier_code: e ? e.label : \"\",\n        supplier_desc: e ? e.value : \"\",\n      });\n    }\n  };\n\n  const handleValidation = (dataRc) => {\n    let err = false;\n    if(dataRc.process === \"\"){\n      err = true;\n    }\n    if(!slocAsal){\n      err = true;\n    }\n    if(rc.part_number_induk){\n      err = true;\n    }\n    if(rc.part_number_anak){\n      err = true;\n    }\n    if(!rejectSymptom){\n      err = true;\n    }\n    if(!beban){\n      err = true;\n    }\n    if(!quantityQuality){\n      err = true;\n    }\n    if(rc.jumlah === \"\" || +rc.jumlah < 1){\n      err = true;\n    }\n    if(!action){\n      err = true;\n    }\n    if(rc.symptoms.length < 1){\n      err = true;\n    }\n\n    return err;\n  }\n\n  const handleCreate = (e) => {\n    e.stopPropagation();\n    let dataRc = rc;\n    dataRc.symptoms = datas;\n    const cekVal = handleValidation(dataRc);\n    if(!cekVal){\n      const newId = Math.max(...localRc.map(o => +o.id))+1;\n      dataRc.id = \"\"+newId;\n      dataRc.status = 'CREATED'\n      console.log(dataRc, 'data rc');\n      const newLocalRc = localRc.concat(dataRc);\n      localStorage.setItem('dataRc', JSON.stringify(newLocalRc));\n      Swal.fire({\n        title: 'Success',\n        icon: 'success',\n        text: 'Create Reject Card Success!'\n      }).then(() => {\n        window.location.reload(false);\n      })\n    }else{\n      Swal.fire({\n        title: 'Warning',\n        icon: 'warning',\n        text: 'Data belum lengkap'\n      })\n    }\n  }\n\n  //---modal symptom\n  const handleCloseModalSymptom = () => {\n    setOpenModalSymptom(false);\n  };\n\n  const openSymptom = (e, row) => {\n    e.stopPropagation();\n    // let newList = listDefaultSymptomOption.filter((item) => !datas.includes(item.id));\n    const newList = listDefaultSymptomOption.filter((item) =>\n      datas.every((el) => el.id !== item.id)\n    );\n    console.log(datas, \"datas\");\n    console.log(newList, \"new list\");\n    setListSymptomOption(newList);\n    setOpenModalSymptom(true);\n  };\n\n  const handleSubmitForm = (dataSubmit) => {\n    setOpenModalSymptom(false);\n    let newData = datas;\n    newData = newData.concat({\n      id: dataSubmit.symptom.value,\n      name: dataSubmit.symptom.label,\n      quantity: dataSubmit.quantity,\n    });\n    setDatas(newData);\n    handleSelectRow(\"all\", null, false);\n  };\n\n  const handleDelete = () => {\n    if (selectedRows.length > 0) {\n      Swal.fire({\n        title: \"Warning\",\n        text: \"Are you sure you want to delete this data?\",\n        icon: \"warning\",\n        cancelButtonText: \"Cancel!\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes!\",\n        confirmButtonColor: \"#3085d6\",\n        showCancelButton: true,\n      }).then((result) => {\n        if (result.value) {\n          let newDatas = datas.filter((item) => !selectedRows.includes(item));\n          setDatas(newDatas);\n          handleSelectRow(\"all\", null, false);\n        }\n      });\n    }\n  };\n  //---\n\n  const handlePageChange = (page, sizePerPage) => {\n    setCurrentPage(page);\n    setSizePerPage(sizePerPage);\n  };\n\n  const handleSelectRow = (cat, row, isSelect) => {\n    if (isSelect === true && cat === \"single\") {\n      setSelectedRows([...selectedRows, row]);\n    } else if (isSelect === true && cat === \"all\") {\n      setSelectedRows(row);\n    } else if (cat === \"single\") {\n      var array = selectedRows;\n      var index = array.findIndex((el) => el.id === row.id);\n      if (index !== -1) {\n        array.splice(index, 1);\n        setSelectedRows(array);\n      }\n    } else {\n      setSelectedRows([]);\n    }\n  };\n\n  const columns = [\n    {\n      dataField: \"#\",\n      text: \"#\",\n      headerAlign: \"center\",\n      align: \"center\",\n      formatter: (cell, row, rowIndex) => {\n        let rowNumber = (currentPage - 1) * sizePerPage + (rowIndex + 1);\n        return <span>{rowNumber}</span>;\n      },\n      headerStyle: (colum, colIndex) => {\n        return { width: \"40px\" };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      headerAlign: \"center\",\n      align: \"left\",\n      editable: false,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"180px\" };\n      },\n    },\n    {\n      dataField: \"quantity\",\n      text: \"Quantity\",\n      headerAlign: \"center\",\n      align: \"left\",\n      editable: false,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"180px\" };\n      },\n    },\n  ];\n\n  const columnsPart = [\n    {\n      dataField: \"#\",\n      text: \"#\",\n      headerAlign: \"center\",\n      align: \"center\",\n      formatter: (cell, row, rowIndex) => {\n        let rowNumber = (currentPage - 1) * sizePerPage + (rowIndex + 1);\n        return <span>{rowNumber}</span>;\n      },\n      headerStyle: (colum, colIndex) => {\n        return { width: \"40px\" };\n      },\n    },\n    {\n      dataField: \"id\",\n      text: \"Action\",\n      headerAlign: \"center\",\n      align: \"center\",\n      editable: false,\n      isDummyField: true,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"60px\" };\n      },\n      formatter: (cellContent, row) => {\n        return (\n          <div>\n            <span className=\"btnInTable\">\n              <Button\n                className=\"btn-success btn-brand btn-sm icon mg-r-2\"\n                onClick={(e) => handleSelectPart(e, row)}\n              >\n                <i className=\"typcn typcn-input-checked\"> </i>{\" \"}\n              </Button>\n            </span>\n          </div>\n        );\n      },\n    },\n    {\n      dataField: \"part_number\",\n      text: \"Part Number\",\n      headerAlign: \"center\",\n      align: \"center\",\n      editable: false,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"120px\" };\n      },\n    },\n    {\n      dataField: \"part_number_desc\",\n      text: \"Part Desc\",\n      headerAlign: \"center\",\n      align: \"left\",\n      editable: false,\n      headerStyle: (colum, colIndex) => {\n        return { width: \"180px\" };\n      },\n    },\n  ];\n\n  return (\n    <div>\n      <div className=\"container d-flex p-md-0\">\n        <div className=\"az-content-body pd-lg-l-40 d-flex flex-column\">\n          <div className=\"az-content-breadcrumb\">\n            <span>TRANSACTION</span>\n            <span>REJECT CARD</span>\n          </div>\n          <h2 className=\"az-content-title\">Create Reject Card</h2>\n\n          <div className=\"row row-sm mt-0\">\n            <div className=\"col-lg-6\">\n              <div className=\"az-content-label mg-b-5\">Fill Reject Data</div>\n              <p className=\"mg-b-20 font-italic\">Fields (*) are required</p>\n              <form>\n                <div class=\"form-group row\">\n                  <label for=\"staticEmail\" class=\"col-sm-4 col-form-label\">\n                    Process *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Select\n                      className=\"w-100\"\n                      name=\"process\"\n                      value={process}\n                      onChange={(e) => handleChangeSelect(e, \"process\")}\n                      isClearable={true}\n                      options={processOption}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Operator ID\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"operator_id_create\"\n                      value={rc.operator_id_create}\n                      onChange={(e) => handleChange(e, \"operator_id_create\")}\n                      placeholder=\"Auto Input Operator ID\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Sloc Asal *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Select\n                      className=\"w-100\"\n                      name=\"slocAsal\"\n                      value={slocAsal}\n                      onChange={(e) => handleChangeSelect(e, \"slocAsal\")}\n                      isClearable={true}\n                      options={slocAsalOption}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Nomor BIN\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"bin\"\n                      value={rc.bin}\n                      onChange={(e) => handleChange(e, \"bin\")}\n                      placeholder=\"Input Nomor Bin\"\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Part Number Induk *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"part_number_induk\"\n                      value={rc.part_number_induk}\n                      onClick={(e) => handleShow(e, \"Part Induk\")}\n                      // onChange={(e) => handleChange(e, \"part_number_induk\")}\n                      placeholder=\"Input Part Number Induk\"\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Part Induk Desc.\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"part_induk_desc\"\n                      value={rc.part_induk_desc}\n                      onChange={(e) => handleChange(e, \"part_induk_desc\")}\n                      placeholder=\"Auto Input Part Induk Desc\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Part Number Anak *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"part_number_anak\"\n                      value={rc.part_number_anak}\n                      // onChange={(e) => handleChange(e, \"part_number_anak\")}\n                      onClick={(e) => handleShow(e, \"Part Anak\")}\n                      placeholder=\"Input Part Number Anak\"\n                      disabled={rc.part_number_induk === \"\"}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Part Anak Desc.\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"part_anak_desc\"\n                      value={rc.part_anak_desc}\n                      onChange={(e) => handleChange(e, \"part_anak_desc\")}\n                      placeholder=\"Auto Input Part Anak Desc\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    MRP Controller *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"mrp_controller\"\n                      value={rc.mrp_controller}\n                      onChange={(e) => handleChange(e, \"mrp_controller\")}\n                      placeholder=\"Auto Input MRP Controller\"\n                      disabled\n                    />\n                    {/* <Select\n                      className=\"w-100\"\n                      name=\"mrp\"\n                      value={mrp}\n                      onChange={(e) => handleChangeSelect(e, \"mrp\")}\n                      isClearable={true}\n                      options={mrpOption}\n                    /> */}\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Reject Symptom Cat. *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Select\n                      className=\"w-100\"\n                      name=\"rejectSymptom\"\n                      value={rejectSymptom}\n                      onChange={(e) => handleChangeSelect(e, \"rejectSymptom\")}\n                      isClearable={true}\n                      options={rejectSymptomOption}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Beban Vendor/Seksi *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Select\n                      className=\"w-100\"\n                      name=\"beban\"\n                      value={beban}\n                      onChange={(e) => handleChangeSelect(e, \"beban\")}\n                      isClearable={true}\n                      options={[\n                        { value: \"Vendor\", label: \"Vendor\" },\n                        { value: \"Seksi\", label: \"Seksi\" },\n                      ]}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Seksi/Supplier Code *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Select\n                      className=\"w-100\"\n                      name=\"supplierCode\"\n                      value={supplierCode}\n                      onChange={(e) => handleChangeSelect(e, \"supplierCode\")}\n                      isClearable={true}\n                      options={supplierCodeOption}\n                      isDisabled={rc.beban === \"\" || beban === null}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Seksi/Supplier Desc.\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"supplier_desc\"\n                      value={rc.supplier_desc}\n                      onChange={(e) => handleChange(e, \"supplier_desc\")}\n                      placeholder=\"Auto Input Seksi/Supplier Desc\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Quantity/Quality *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Select\n                      className=\"w-100\"\n                      name=\"quantityQuality\"\n                      value={quantityQuality}\n                      onChange={(e) => handleChangeSelect(e, \"quantityQuality\")}\n                      isClearable={true}\n                      options={quantityQualityOption}\n                      isDisabled={rc.process === \"\"}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Jumlah *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"number\"\n                      name=\"jumlah\"\n                      value={rc.jumlah}\n                      onChange={(e) => handleChange(e, \"jumlah\")}\n                      placeholder=\"Input Jumlah\"\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Sloc Tujuan\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"sloc_tujuan\"\n                      value={rc.sloc_tujuan}\n                      onChange={(e) => handleChange(e, \"sloc_tujuan\")}\n                      placeholder=\"Auto Input Sloc Tujuan\"\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Action *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Select\n                      className=\"w-100\"\n                      name=\"action\"\n                      value={action}\n                      onChange={(e) => handleChangeSelect(e, \"action\")}\n                      isClearable={true}\n                      options={actionOption}\n                      isDisabled={rc.quality_quantity === \"\"}\n                    />\n                  </div>\n                </div>\n                <div class=\"form-group row\">\n                  <label for=\"inputPassword\" class=\"col-sm-4 col-form-label\">\n                    Vendor Repair *\n                  </label>\n                  <div class=\"col-sm-8\">\n                    <Form.Control\n                      type=\"text\"\n                      name=\"vendor_repair\"\n                      value={rc.vendor_repair}\n                      onChange={(e) => handleChange(e, \"vendor_repair\")}\n                      placeholder=\"Input Vendor Repair\"\n                    />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"az-content-label mg-b-5\">Symptoms</div>\n              <p className=\"mg-b-20 font-italic\">Required minimal 1 symptom</p>\n              <div className=\"az-content-label mg-b-5\">\n                <div className=\"az-dashboard-nav\">\n                  <nav className=\"nav\">\n                    <a className=\"nav-link\" href=\"javascript:;\">\n                      <Button\n                        variant=\"success btn-block\"\n                        className=\"btn-info btn-brand btn-sm icon mg-r-2\"\n                        style={{ lineHeight: \"28px\", display: \"flex\" }}\n                        onClick={openSymptom}\n                        disabled={rc.reject_symptom === \"\"}\n                      >\n                        <i\n                          className=\"typcn typcn-plus\"\n                          style={{ fontSize: \"18px\", lineHeight: \"28px\" }}\n                        ></i>{\" \"}\n                        Add Symptom\n                      </Button>\n                    </a>\n                    <a className=\"nav-link\" href=\"javascript:;\">\n                      <Button\n                        variant=\"danger btn-block\"\n                        className=\"btn-danger btn-brand btn-sm icon mg-r-2\"\n                        style={{ lineHeight: \"28px\", display: \"flex\" }}\n                        onClick={handleDelete}\n                        disabled={datas.length === 0}\n                        // disabled={datas.length === 0 || selectedRows.length === 0}\n                      >\n                        <i\n                          className=\"typcn typcn-trash\"\n                          style={{ fontSize: \"18px\", lineHeight: \"28px\" }}\n                        ></i>{\" \"}\n                        Delete\n                      </Button>\n                    </a>\n                    <a className=\"nav-link\" href=\"#/\">\n                      <i className=\"fas fa-ellipsis-h\"></i>\n                    </a>\n                  </nav>\n                </div>\n\n                <Table2EditSelect\n                  caption=\"\"\n                  tableHead={columns}\n                  datas={datas}\n                  handlePageChange={handlePageChange}\n                  handleSelectRow={handleSelectRow}\n                />\n                <div className=\"mg-t-20 d-flex justify-content-center\">\n                  <BarCode value={rc.no_rc} width={1.5} height={70} fontSize={14} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <hr className=\"mg-y-10\" />\n          </div>\n\n          <div className=\"row row-sm\">\n            <div className=\"row row-xs wd-xl-80p\">\n              <div className=\"col-sm-4 col-md-4 mg-t-10\">\n                <Button variant=\"secondary btn-block\">\n                  <i\n                    className=\"typcn typcn-printer\"\n                    style={{ fontSize: \"18px\" }}\n                  ></i>{\" \"}\n                  Save as Draft\n                </Button>\n              </div>\n              <div className=\"col-sm-4 col-md-4 mg-t-10\">\n                <Button variant=\"success btn-block\"\n                onClick={(e) => handleCreate(e)}>\n                  <i\n                    className=\"typcn typcn-location-arrow\"\n                    style={{ fontSize: \"18px\" }}\n                  ></i>{\" \"}\n                  Create\n                </Button>\n              </div>\n              <div className=\"col-sm-4 col-md-4 mg-t-10\">\n                <Button variant=\"danger btn-block\">\n                  <i\n                    className=\"typcn typcn-arrow-back\"\n                    style={{ fontSize: \"18px\" }}\n                  ></i>{\" \"}\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalSymptom\n        open={openModalSymptom}\n        listSymptomOption={listSymptomOption}\n        onSubmit={handleSubmitForm}\n        onClose={handleCloseModalSymptom}\n      />\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table2EditSearch\n            caption=\"\"\n            tableHead={columnsPart}\n            datas={datasPart}\n            handlePageChange={handlePageChange}\n          />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default RejectCard;\n","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\n\nconst Table2EditSelect = (props) => {\n\n    // const MySearch = (props) => {\n    //   let input;\n    //   const handleClick = () => {\n    //     props.onSearch(input.value);\n    //   };\n    //   const handleClear = () => {\n    //     input.value='';\n    //     handleClick()\n    //   };\n    //   return (\n    //     <div style={{display: 'flex', justifyContent: 'flex-end', marginBottom:'15px'}}>\n    //       <input type=\"text\" ref={ n => input = n } onChange={ handleClick } className=\"textSearch\"/><i className=\"typcn typcn-times iconSearch\" onClick={ handleClear }></i><input type=\"submit\" onClick={ handleClick } value=\"\" className=\"btnSearch\"/>\n    //     </div>\n    //   );\n    // };\n\n    const onPageChange = (page, sizePerPage) => {\n        props.handlePageChange(page, sizePerPage);\n    }\n\n    const customTotal = (from, to, size) => (\n        <div className=\"react-bootstrap-table-pagination-total\" style={{position: 'absolute', padding: '8px 4px', backgroundColor: 'white'}}>\n          Total <b>{ size }</b>\n        </div>\n    );\n\n    const emptyDataMessage = () => { return 'No Data to Display';}\n      \n    const options = {\n        onPageChange: onPageChange,\n        paginationSize: 4,\n        pageStartIndex: 1,\n        alwaysShowAllBtns: false, // Always show next and previous button\n        // withFirstAndLast: false, // Hide the going to First and Last page button\n        hideSizePerPage: true, // Hide the sizePerPage dropdown always\n        // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n        firstPageText: '<<',\n        prePageText: '<',\n        nextPageText: '>',\n        lastPageText: '>>',\n        // nextPageTitle: 'First page',\n        // prePageTitle: 'Pre page',\n        // firstPageTitle: 'Next page',\n        // lastPageTitle: 'Last page',\n        showTotal: true,\n        paginationTotalRenderer: customTotal,\n        disablePageTitle: true,\n        sizePerPageList: [{\n          text: '10', value: 10\n        }, {\n          text: '20', value: 20\n        }, {\n          text: 'All', value: props.datas.length\n        }]\n    };\n\n    const selectRow = {\n      mode: 'checkbox',\n      clickToSelect: true,\n      bgColor: '#e3e8e4',\n\n      size: '10000px',\n      // headerColumnStyle: { backgroundColor: 'blue' },\n      onSelect: (row, isSelect, rowIndex, e) => {\n        props.handleSelectRow('single', row, isSelect)\n      },\n      onSelectAll: (isSelect, row, e) => {\n        if (isSelect) {\n          return props.handleSelectRow('all', row, isSelect)\n        } else {\n          props.handleSelectRow('all', row, isSelect)\n          return [];\n        }\n      }\n\n    };\n\n    return(\n        <div>\n            <ToolkitProvider\n                    keyField=\"id\"\n                    data={ props.datas }\n                    columns={ props.tableHead }\n                    search={false}\n                    caption={ props.caption }\n                >\n                    {\n                        (props) => (\n                            <div>\n                                {/* <SearchBar { ...props.searchProps } />\n                                <ClearSearchButton { ...props.searchProps } className=\"btn-outline-dark ml-1 mb-1\"/> */}\n                                {/* <MySearch { ...props.searchProps } /> */}\n                                {/* <hr /> */}\n                                <BootstrapTable\n                                    { ...props.baseProps }\n                                    striped\n                                    hover\n                                    condensed\n                                    wrapperClasses=\"table-responsive\"\n                                    pagination={ paginationFactory(options) }\n                                    selectRow={selectRow}\n                                    noDataIndication={emptyDataMessage}\n                                />\n                            </div>\n                        )\n                    }\n            </ToolkitProvider>\n        </div>\n    )\n}\n\nexport default Table2EditSelect","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\n\nconst Table2Edit = (props) => {\n\n    const MySearch = (props) => {\n      let input;\n      const handleClick = () => {\n        props.onSearch(input.value);\n      };\n      const handleClear = () => {\n        input.value='';\n        handleClick()\n      };\n      return (\n        <div style={{display: 'flex', justifyContent: 'flex-end', marginBottom:'15px'}}>\n          <input type=\"text\" ref={ n => input = n } onChange={ handleClick } className=\"textSearch\"/><i className=\"typcn typcn-times iconSearch\" onClick={ handleClear } style={{marginTop: -1}}></i><input type=\"submit\" onClick={ handleClick } value=\"\" className=\"btnSearch\"/>\n        </div>\n      );\n    };\n\n    const onPageChange = (page, sizePerPage) => {\n        props.handlePageChange(page, sizePerPage);\n    }\n\n    const customTotal = (from, to, size) => (\n        <div className=\"react-bootstrap-table-pagination-total\" style={{ position: 'absolute', padding: '8px 4px', backgroundColor: 'white' }}>\n            Total <b>{size}</b>\n        </div>\n    );\n\n    const emptyDataMessage = () => { return 'No Data to Display'; }\n\n    const options = {\n        onPageChange: onPageChange,\n        paginationSize: 4,\n        pageStartIndex: 1,\n        alwaysShowAllBtns: false, // Always show next and previous button\n        // withFirstAndLast: false, // Hide the going to First and Last page button\n        hideSizePerPage: true, // Hide the sizePerPage dropdown always\n        // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\n        firstPageText: '<<',\n        prePageText: '<',\n        nextPageText: '>',\n        lastPageText: '>>',\n        // nextPageTitle: 'First page',\n        // prePageTitle: 'Pre page',\n        // firstPageTitle: 'Next page',\n        // lastPageTitle: 'Last page',\n        showTotal: true,\n        paginationTotalRenderer: customTotal,\n        disablePageTitle: true,\n        sizePerPageList: [{\n            text: '10', value: 10\n        }, {\n            text: '20', value: 20\n        }, {\n            text: 'All', value: props.datas.length\n        }]\n    };\n\n    return (\n        <div>\n            <ToolkitProvider\n                keyField=\"id\"\n                data={props.datas}\n                columns={props.tableHead}\n                search={true}\n                caption={props.caption}\n            >\n                {\n                    (props) => (\n                        <div>\n                            {/* <SearchBar { ...props.searchProps } />\n                                <ClearSearchButton { ...props.searchProps } className=\"btn-outline-dark ml-1 mb-1\"/> */}\n                            <MySearch { ...props.searchProps } />\n                            {/* <hr /> */}\n                            <BootstrapTable\n                                {...props.baseProps}\n                                striped\n                                hover\n                                condensed\n                                wrapperClasses=\"table-responsive\"\n                                pagination={paginationFactory(options)}\n                                noDataIndication={emptyDataMessage}\n                            />\n                        </div>\n                    )\n                }\n            </ToolkitProvider>\n        </div>\n    )\n}\n\nexport default Table2Edit"],"sourceRoot":""}